apiVersion: v1
kind: ConfigMap
metadata:
  name: api-gateway-config
  namespace: storyverse
data:
  default.conf: |
    server {
        listen 8080;
        server_name localhost;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        location /health {
            return 200 'healthy';
            add_header Content-Type text/plain;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
    <title>StoryVerse API Gateway</title>
    <style>
        body {
            width: 35em;
            margin: 0 auto;
            font-family: Tahoma, Verdana, Arial, sans-serif;
        }
        h1 {
            color: #4285f4;
        }
        .container {
            margin-top: 50px;
            text-align: center;
        }
    </style>
    </head>
    <body>
    <div class="container">
        <h1>StoryVerse API Gateway</h1>
        <p>This is a placeholder for the StoryVerse API Gateway.</p>
        <p>This instance is running on EKS with AutoMode enabled.</p>
        <p><em>Powered by AWS EKS AutoMode</em></p>
    </div>
    </body>
    </html>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: storyverse
  labels:
    app: api-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: nginx:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        volumeMounts:
        - name: api-gateway-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        - name: api-gateway-config
          mountPath: /usr/share/nginx/html/index.html
          subPath: index.html
        env:
        - name: UNIVERSE_SERVICE_URL
          value: "http://universe-management:8080"
        - name: CHARACTER_SERVICE_URL
          value: "http://character-database:8080"
        - name: TEXT_GENERATION_URL
          value: "http://text-generation:8080"
        - name: IMAGE_GENERATION_URL
          value: "http://image-generation:8080"
        - name: AUDIO_GENERATION_URL
          value: "http://audio-narration:8080"
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: api-gateway-config
        configMap:
          name: api-gateway-config
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: api-gateway
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: storyverse
spec:
  selector:
    app: api-gateway
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
