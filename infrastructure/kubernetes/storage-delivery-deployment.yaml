apiVersion: apps/v1
kind: Deployment
metadata:
  name: story-database
  namespace: storyverse
  labels:
    app: story-database
    tier: storage-delivery
spec:
  replicas: 2
  selector:
    matchLabels:
      app: story-database
  template:
    metadata:
      labels:
        app: story-database
        tier: storage-delivery
    spec:
      containers:
      - name: story-database
        image: public.ecr.aws/j0rd1/demo/storyverse/story-database:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: mongodb-credentials
              key: uri
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: story-database
---
apiVersion: v1
kind: Service
metadata:
  name: story-database
  namespace: storyverse
spec:
  selector:
    app: story-database
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: media-asset
  namespace: storyverse
  labels:
    app: media-asset
    tier: storage-delivery
spec:
  replicas: 2
  selector:
    matchLabels:
      app: media-asset
  template:
    metadata:
      labels:
        app: media-asset
        tier: storage-delivery
    spec:
      containers:
      - name: media-asset
        image: public.ecr.aws/j0rd1/demo/storyverse/media-asset:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: mongodb-credentials
              key: uri
        - name: AWS_S3_BUCKET
          value: "storyverse-media"
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: media-asset
---
apiVersion: v1
kind: Service
metadata:
  name: media-asset
  namespace: storyverse
spec:
  selector:
    app: media-asset
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: content-delivery
  namespace: storyverse
  labels:
    app: content-delivery
    tier: storage-delivery
spec:
  replicas: 2
  selector:
    matchLabels:
      app: content-delivery
  template:
    metadata:
      labels:
        app: content-delivery
        tier: storage-delivery
    spec:
      containers:
      - name: content-delivery
        image: public.ecr.aws/j0rd1/demo/storyverse/content-delivery:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: mongodb-credentials
              key: uri
        - name: MEDIA_SERVICE_URL
          value: "http://media-asset:8080"
        - name: STORY_DATABASE_URL
          value: "http://story-database:8080"
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: content-delivery
---
apiVersion: v1
kind: Service
metadata:
  name: content-delivery
  namespace: storyverse
spec:
  selector:
    app: content-delivery
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
